// import React, { useState } from "react";
// import {
//   Avatar,
//   Button,
//   Paper,
//   Grid,
//   Typography,
//   Container,
//   TextField,
// } from "@material-ui/core";
// import { GoogleLogin, googleLogout } from "@react-oauth/google";
// import { useDispatch } from "react-redux";
// import Icon from "./icon";
// import jwt_decode from "jwt-decode";

// import Input from "./Input";
// import useStyles from "./styles";

// import LockOutlinedIcon from "@material-ui/icons/LockOutlined";

// const Auth = () => {
//   const classes = useStyles();
//   const [showPassword, setShowPassword] = useState(false);
//   const [isSignup, setisSignup] = useState(false);
//   const dispatch = useDispatch();

//   const handleShowPassword = () =>
//     setShowPassword((prevShowPassword) => !prevShowPassword);

//   const handleSubmit = () => {};

//   const handleChange = () => {};

//   const switchMode = () => {
//     setisSignup((prevIsSignup) => !prevIsSignup);
//     handleShowPassword(false);
//   };

//   const googleSuccess = async (response) => {
//     const decoded= jwt_decode(
//       response.credential
//     );

//     // const token = response.tokenId;
//     console.log(decoded);

//     try {
//       dispatch({ type: "AUTH", data: { decoded } });
//     } catch (error) {
//       console.log(error);
//     }
//   };
//   const googleError = () => {
//     console.log("Google Sign In was unsuccessful. Try Again later");
//   };

//   return (
//     <Container component="main" maxWidth="xs">
//       <Paper className={classes.paper} elevation={3}>
//         <Avatar className={classes.avatar}>
//           <LockOutlinedIcon />
//         </Avatar>
//         <Typography variant="h5">{isSignup ? "Sign Up" : "Sign In"}</Typography>
//         <form className={classes.form} onSubmit={handleSubmit}>
//           <Grid container spacing={2}>
//             {isSignup && (
//               <>
//                 <Input
//                   name="firstName"
//                   label="First Name"
//                   handleChange={handleChange}
//                   autoFocus
//                   half
//                 />
//                 <Input
//                   name="firstName"
//                   label="First Name"
//                   handleChange={handleChange}
//                   half
//                 />
//               </>
//             )}
//             <Input
//               name="email"
//               label="Email Address"
//               handleChange={handleChange}
//               type="email"
//             />
//             <Input
//               name="password"
//               label="Password"
//               handleChange={handleChange}
//               type={showPassword ? "text" : "password"}
//               handleShowPassword={handleShowPassword}
//             />
//             {isSignup && (
//               <Input
//                 name="confirmPassword"
//                 label="Repeat Password"
//                 handleChange={handleChange}
//                 type="password"
//               />
//             )}
//           </Grid>

//           <Button
//             type="submit"
//             fullWidth
//             variant="contained"
//             color="primary"
//             className={classes.submit}
//           >
//             {isSignup ? "Sign Up" : "Sign In"}
//           </Button>
//           <GoogleLogin onSuccess={googleSuccess} onFailure={googleError} />
//           <Grid container justifyContent="flex-end">
//             <Button onClick={switchMode}>
//               {isSignup
//                 ? "Already have an account? Sign In"
//                 : "Don't have an account? Sign Up"}
//             </Button>
//           </Grid>
//         </form>
//       </Paper>
//     </Container>
//   );
// };

// export default Auth;

//........................
// import React, { useState, useEffect } from "react";
// import {
//   Avatar,
//   Button,
//   Paper,
//   Grid,
//   Typography,
//   Container,
//   TextField,
// } from "@material-ui/core";
// import { googleLogout, useGoogleLogin } from "@react-oauth/google";
// import axios from "axios";
// import { useDispatch } from "react-redux";
// import Icon from "./icon";
// import jwt_decode from "jwt-decode";

// import Input from "./Input";
// import useStyles from "./styles";

// import LockOutlinedIcon from "@material-ui/icons/LockOutlined";

// const Auth = () => {
//   const classes = useStyles();
//   const [user, setUser] = useState([]);
//   const [profile, setProfile] = useState([]);
//   const [showPassword, setShowPassword] = useState(false);
//   const [isSignup, setisSignup] = useState(false);
//   const dispatch = useDispatch();

//   const handleShowPassword = () =>
//     setShowPassword((prevShowPassword) => !prevShowPassword);

//   const handleSubmit = () => {};

//   const handleChange = () => {};

//   const switchMode = () => {
//     setisSignup((prevIsSignup) => !prevIsSignup);
//     handleShowPassword(false);
//   };

//   const login = useGoogleLogin({
//     onSuccess: (codeResponse) => setUser(codeResponse),
//     onError: (error) => console.log("Login Failed:", error),
//   });

//   useEffect(() => {
//     if (user) {
//       axios
//         .get(
//           `https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`,
//           {
//             headers: {
//               Authorization: `Bearer ${user.access_token}`,
//               Accept: "application/json",
//             },
//           }
//         )
//         .then((res) => {
//           setProfile(res.data);
//         })
//         .catch((err) => console.log(err));
//     }
//   }, [user]);

//   const logOut = () => {
//     googleLogout();
//     setProfile(null);
//   };

//   return (
//     <Container component="main" maxWidth="xs">
//       <Paper className={classes.paper} elevation={3}>
//         <Avatar className={classes.avatar}>
//           <LockOutlinedIcon />
//         </Avatar>
//         <Typography variant="h5">{isSignup ? "Sign Up" : "Sign In"}</Typography>
//         <form className={classes.form} onSubmit={handleSubmit}>
//           <Grid container spacing={2}>
//             {isSignup && (
//               <>
//                 <Input
//                   name="firstName"
//                   label="First Name"
//                   handleChange={handleChange}
//                   autoFocus
//                   half
//                 />
//                 <Input
//                   name="firstName"
//                   label="First Name"
//                   handleChange={handleChange}
//                   half
//                 />
//               </>
//             )}
//             <Input
//               name="email"
//               label="Email Address"
//               handleChange={handleChange}
//               type="email"
//             />
//             <Input
//               name="password"
//               label="Password"
//               handleChange={handleChange}
//               type={showPassword ? "text" : "password"}
//               handleShowPassword={handleShowPassword}
//             />
//             {isSignup && (
//               <Input
//                 name="confirmPassword"
//                 label="Repeat Password"
//                 handleChange={handleChange}
//                 type="password"
//               />
//             )}
//           </Grid>

//           <Button
//             type="submit"
//             fullWidth
//             variant="contained"
//             color="primary"
//             className={classes.submit}
//           >
//             {isSignup ? "Sign Up" : "Sign In"}
//           </Button>
//           {profile ? (
//             <div>
//               <img src={profile.picture} alt="user image" />
//               <h3>User Logged in</h3>
//               <p>Name: {profile.name}</p>
//               <p>Email Address: {profile.email}</p>
//               <br />
//               <br />
//               <button onClick={logOut}>Log out</button>
//             </div>
//           ) : (
//             <button onClick={() => login()}>Sign in with Google </button>
//           )}
//           <Grid container justifyContent="flex-end">
//             <Button onClick={switchMode}>
//               {isSignup
//                 ? "Already have an account? Sign In"
//                 : "Don't have an account? Sign Up"}
//             </Button>
//           </Grid>
//         </form>
//       </Paper>
//     </Container>
//   );
// };

// export default Auth;

